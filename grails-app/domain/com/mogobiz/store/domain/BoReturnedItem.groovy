// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: GrailsEntity.vsl in andromda-grails-cartridge.
//
package com.mogobiz.store.domain;

import grails.persistence.Entity
import groovy.transform.EqualsAndHashCode

/**
 * 
 */
@Entity
@EqualsAndHashCode(includes="id")
class BoReturnedItem
    implements java.io.Serializable
{
    def boReturnedItemValidation
    def boReturnedItemRender

    java.util.Date dateCreated
    java.util.Date lastUpdated

    String uuid = java.util.UUID.randomUUID().toString()


    /**
     * <p>
     * nombre de consommation nécessaire pour consommer totalement la
     * vente.<br/>
     * </p>
     * <p>
     * Correspond à la somme des quantité des types de tickets  (1 si
     * aucun type de ticket) multiplié par le nombre de suggestion
     * </p>
     */
    int quantity  = 1 
    /**
     * 
     */
    java.lang.Long refunded 
    /**
     * 
     */
    long totalRefunded 
    /**
     * 
     */
    com.mogobiz.store.domain.ReturnedIntemStatus status 
    /**
     * 
     */
    com.mogobiz.store.domain.BOReturn bOReturn 

    /**
     * 
     */
    com.mogobiz.store.domain.BOCartItem bOCartItem 

    static transients = [ 'boReturnedItemValidation', 'boReturnedItemRender' ]


    static mapping = {

        autoTimestamp true

    uuid column:"uuid",insertable:true,updateable:false,lazy:false,cache:false



        cache usage:'read-write'

        tablePerHierarchy false

        table 'bo_returned_item'

        version false

        id name:'id',column:'id',generator:'native'
        quantity column:"quantity",insertable:true,updateable:true,lazy:false,cache:false
        refunded column:"refunded",insertable:true,updateable:true,lazy:false,cache:false
        totalRefunded column:"total_refunded",insertable:true,updateable:true,lazy:false,cache:false
        status column:"status",enumType:"string",insertable:true,updateable:true,lazy:false,cache:false


        bOReturn column:"b_o_return_fk",insertable:true,updateable:true,lazy:true,cache:'read-write'

        bOCartItem column:"b_o_cart_item_fk",insertable:true,updateable:true,lazy:true,cache:'read-write'
    }

    static constraints = {
    uuid (nullable:false, unique:false)

        quantity ( blank:false, nullable:false, unique:false)
        refunded ( blank:false, nullable:false, unique:false)
        totalRefunded ( blank:false, nullable:false, unique:false)
        status ( blank:false, nullable:false, unique:false)
        bOReturn (nullable:true)
        bOCartItem (nullable:true)
    }


    String toString(){return boReturnedItemRender?.asString(this)}

    def beforeInsert = {
        boReturnedItemValidation.beforeInsert(this)
    }

    def beforeUpdate = {
        boReturnedItemValidation.beforeUpdate(this)
    }

    def beforeDelete = {
        boReturnedItemValidation.beforeDelete(this)
    }

    def beforeValidate = {
        boReturnedItemValidation.beforeValidate(this)
    }

    def afterInsert = {
        boReturnedItemValidation.afterInsert(this)
    }

    def afterUpdate = {
        boReturnedItemValidation.afterUpdate(this)
    }

    def afterDelete = {
        boReturnedItemValidation.afterDelete(this)
    }

    def onLoad = {
        boReturnedItemValidation.onLoad(this)
    }

    java.util.Map asMapForJSON(java.util.List<String> included = [], java.util.List<String> excluded = [], String lang = 'fr') {return boReturnedItemRender.asMap(included, excluded, this, lang)}

    // GrailsEntity.vsl merge-point
}