<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>mogobiz-grails</artifactId>
        <groupId>com.mogobiz</groupId>
        <version>1.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>mogobiz-core</artifactId>
    <packaging>grails-plugin</packaging>

    <name>mogobiz core grails plugin</name>
    <description>mogobiz core grails plugin</description>

    <properties>
        <oracle.version>11.2.0.3.0</oracle.version>

        <!-- application properties -->
        <application.id>iper2010</application.id>
        <application.name>${application.id}</application.name>
        <application.package>${project.groupId}</application.package>

        <!-- andromda properties -->
        <andromda.version>3.2</andromda.version>
        <andromda.grails.version>3.2</andromda.grails.version>
        <grails.output.dir>${project.basedir}/grails-app</grails.output.dir>
        <model.path>${project.basedir}/mda/src/main/uml</model.path>
        <model.id>${application.id}</model.id>
        <model.uri>file:${model.path}/${model.id}.uml2</model.uri>
        <!--
            A comma seperated list of cartridge names (i.e. namespaces) that should be processed by AndroMDA. If this is not defined, then ANY discovered cartridges will be processed. This is useful when you want to restrict the cartridges that will process the model, in order to speed up the development cycle.
            You can also prefix the list of cartridges using the tilde '~' character, that way the cartridges that are *not* listed will be processed (negation).
        -->
        <filter>java, grails</filter>
        <!--
            Specifies whether or not models loaded by AndroMDA will be validated. By default models WILL be validated, however sometimes its nice to turn off validation for performance reasons (i.e. you have very large model(s) being processed).
        -->
        <validation>true</validation>
        <!--
            Specifies whether or not models modifications loaded by AndroMDA should be checked prior to generation.
        -->
        <modification>false</modification>
        <conf.dir>${project.basedir}/mda/src/main/config</conf.dir>
        <!-- hibernate configuration -->
        <!-- default strategy to use when using inhertiance -->
        <hibernate.inheritance.strategy>subclass</hibernate.inheritance.strategy>
        <hibernate.db.showSql>true</hibernate.db.showSql>
        <!-- hibernate eager loading -->
        <eagerLoading>false</eagerLoading>
        <!-- hibernate generator class to use for identifiers -->
        <hibernate.generatorClass>native</hibernate.generatorClass>
        <hibernate.show.sql>false</hibernate.show.sql>
        <jdbc.host>localhost</jdbc.host>
        <jdbc.url>${jdbc.default.url}</jdbc.url>
        <jdbc.username>${application.id}</jdbc.username>
        <jdbc.password>${application.id}</jdbc.password>
        <!--
            Change exception sorder class name for appropriate database
            For MySQL use: org.jboss.resource.adapter.jdbc.vendor.MySQLExceptionSorter
            For Hypersonic use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
            For Oracle9i use: org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
            For DB2 use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
            For Informix use: org.jboss.resource.adapter.jdbc.vendor.InformixExceptionSorter
            For MSSQL use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
            For Pointbase use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
            For Postgres use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
            For Sybase use: org.jboss.resource.adapter.jdbc.vendor.SybaseExceptionSorter
            For SapDB use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
            For Progress use: org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
        -->
        <jdbc.exception.sorter>
            org.jboss.resource.adapter.jdbc.vendor.DummyExceptionSorter
        </jdbc.exception.sorter>
        <!-- jndi -->
        <dataSource.name>jdbc/${application.id}</dataSource.name>
        <dataSource>java:${dataSource.name}</dataSource>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-async</artifactId>
            <version>${grails.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-rest</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-services</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-i18n</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-databinding</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-filters</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-gsp</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-log4j</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-servlets</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-url-mappings</artifactId>
            <version>${grails.version}</version>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-resources</artifactId>
            <version>${grails.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-test</artifactId>
            <version>${grails.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.grails</groupId>
            <artifactId>grails-plugin-testing</artifactId>
            <version>${grails.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.nekohtml</groupId>
            <artifactId>nekohtml</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- begin from grails-app/BuildConfig.groovy //-->
        <dependency>
            <groupId>org.codehaus.groovy.modules.http-builder</groupId>
            <artifactId>http-builder</artifactId>
            <version>0.5.2</version>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.sourceforge.nekohtml</groupId>
                    <artifactId>nekohtml</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-async</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-core</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-media-support</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.twitter4j</groupId>
            <artifactId>twitter4j-stream</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.oltu.oauth2</groupId>
            <artifactId>org.apache.oltu.oauth2.common</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.oltu.oauth2</groupId>
            <artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.oltu.oauth2</groupId>
            <artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.restfb</groupId>
            <artifactId>restfb</artifactId>
        </dependency>

        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.mogobiz.rivers</groupId>
            <artifactId>mogobiz-common</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.mogobiz.rivers</groupId>
            <artifactId>mogobiz-elasticsearch</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-actor_2.11</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-stream-experimental_2.11</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- rxjava-reactive-streams -->
        <dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxjava-reactive-streams</artifactId>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>io.reactivex</groupId>
                    <artifactId>rxjava</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- rxjava -->
        <dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxjava</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- rxgroovy -->
        <dependency>
            <groupId>io.reactivex</groupId>
            <artifactId>rxgroovy</artifactId>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.codehaus.groovy</groupId>
                    <artifactId>groovy-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <scope>runtime</scope>
        </dependency>


        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>cache</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>facebook-graph</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>platform-core</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>google-data</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>email-confirmation</artifactId>
            <scope>compile</scope>
            <type>zip</type>
            <exclusions>
                <exclusion>
                    <groupId>org.grails.plugins</groupId>
                    <artifactId>quartz</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>shiro</artifactId>
            <scope>compile</scope>
            <type>zip</type>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.shiro</groupId>
                    <artifactId>shiro-quartz</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>mail</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>quartz</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>recaptcha</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>cache-headers</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>cached-resources</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>cookie</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>rest</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>joda-time</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>hibernate</artifactId>
            <scope>runtime</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>database-migration</artifactId>
            <scope>runtime</scope>
            <type>zip</type>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>resources</artifactId>
            <scope>runtime</scope>
            <type>zip</type>
        </dependency>

        <!--
        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>spock</artifactId>
            <version>0.7</version>
            <scope>test</scope>
            <type>zip</type>
        </dependency>
        //-->

        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.mogobiz</groupId>
            <artifactId>mogobiz-tools</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
        </dependency>

        <dependency>
            <groupId>org.grails.plugins</groupId>
            <artifactId>executor</artifactId>
            <scope>compile</scope>
            <type>zip</type>
        </dependency>
        <!-- end from grails-app/BuildConfig.groovy //-->

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement/>

        <plugins>
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <phase>pre-clean</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <ignoreMissingFile>false</ignoreMissingFile>
                    <file>${project.basedir}/MogobizCoreGrailsPlugin.groovy.template</file>
                    <outputFile>${project.basedir}/MogobizCoreGrailsPlugin.groovy</outputFile>
                    <replacements>
                        <replacement>
                            <token>%PROJECT_VERSION%</token>
                            <value>${project.version}</value>
                        </replacement>
                    </replacements>
                </configuration>
                <extensions>true</extensions>
            </plugin>
            <!-- Disables the Maven surefire plugin for Grails applications, as we have our own test runner -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
                <executions>
                    <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>plugins</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                            <followSymlinks>false</followSymlinks>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.grails</groupId>
                <artifactId>grails-maven-plugin</artifactId>
                <version>${grails.version}</version>
                <configuration>
                    <fork>true</fork>
                </configuration>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-artifacts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <artifacts>
                                <!-- derby scripts -->
                                <artifact>
                                    <file>${project.basedir}/scripts/derby/create.sql</file>
                                    <type>sql</type>
                                    <classifier>derby-create</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.basedir}/scripts/derby/ddl.sql</file>
                                    <type>sql</type>
                                    <classifier>derby-ddl</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.basedir}/scripts/derby/create.sql</file>
                                    <type>sql</type>
                                    <classifier>derby-drop</classifier>
                                </artifact>
                                <!-- mysql scripts -->
                                <artifact>
                                    <file>${project.basedir}/scripts/mysql/create.sql</file>
                                    <type>sql</type>
                                    <classifier>mysql-create</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.basedir}/scripts/mysql/ddl.sql</file>
                                    <type>sql</type>
                                    <classifier>mysql-ddl</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.basedir}/scripts/mysql/create.sql</file>
                                    <type>sql</type>
                                    <classifier>mysql-drop</classifier>
                                </artifact>
                                <!-- oracle scripts -->
                                <artifact>
                                    <file>${project.basedir}/scripts/oracle/create.sql</file>
                                    <type>sql</type>
                                    <classifier>oracle-create</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.basedir}/scripts/oracle/ddl.sql</file>
                                    <type>sql</type>
                                    <classifier>oracle-ddl</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.basedir}/scripts/oracle/create.sql</file>
                                    <type>sql</type>
                                    <classifier>oracle-drop</classifier>
                                </artifact>
                                <!-- postgresql scripts -->
                                <artifact>
                                    <file>${project.basedir}/scripts/postgresql/create.sql</file>
                                    <type>sql</type>
                                    <classifier>postgresql-create</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.basedir}/scripts/postgresql/ddl.sql</file>
                                    <type>sql</type>
                                    <classifier>postgresql-ddl</classifier>
                                </artifact>
                                <artifact>
                                    <file>${project.basedir}/scripts/postgresql/create.sql</file>
                                    <type>sql</type>
                                    <classifier>postgresql-drop</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- begin jdbc profiles -->
        <profile>
            <id>mysql</id>
            <activation>
                <property>
                    <name>jdbc</name>
                    <value>mysql</value>
                </property>
            </activation>
            <properties>
                <jdbc>mysql</jdbc>
                <sql.mappings>MySQL</sql.mappings>
                <!--
                    For MySql InnoDB use: org.hibernate.dialect.MySQLInnoDBDialect
                    For MySql MyISAM use: org.hibernate.dialect.MySQLMyISAMDialect
                -->
                <hibernate.dialect>
                    org.hibernate.dialect.MySQLInnoDBDialect
                </hibernate.dialect>
                <jdbc.groupId>mysql</jdbc.groupId>
                <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
                <jdbc.version>${mysql.version}</jdbc.version>
                <jdbc.driver> com.mysql.jdbc.Driver</jdbc.driver>
                <jdbc.default.url>
                    jdbc:mysql://${jdbc.host}:3306/${application.id}
                </jdbc.default.url>
            </properties>
        </profile>
        <profile>
            <id>oracle9i</id>
            <activation>
                <property>
                    <name>jdbc</name>
                    <value>oracle9i</value>
                </property>
            </activation>
            <properties>
                <sql.mappings>Oracle9i</sql.mappings>
                <hibernate.dialect>
                    org.hibernate.dialect.Oracle9iDialect
                </hibernate.dialect>
                <jdbc.groupId>oracle</jdbc.groupId>
                <jdbc.artifactId>ojdbc6_g</jdbc.artifactId>
                <jdbc.version>${oracle.version}</jdbc.version>
                <jdbc.driver>
                    oracle.jdbc.driver.OracleDriver
                </jdbc.driver>
                <jdbc.url>
                    jdbc:oracle:thin:@127.0.0.1:1521:${application.id}
                </jdbc.url>
                <jdbc.username>${application.id}</jdbc.username>
                <jdbc.password>${application.id}</jdbc.password>
                <jdbc.exception.sorter>
                    org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
                </jdbc.exception.sorter>
            </properties>
        </profile>
        <profile>
            <id>oracle10g</id>
            <activation>
                <property>
                    <name>jdbc</name>
                    <value>oracle10g</value>
                </property>
            </activation>
            <properties>
                <sql.mappings>Oracle9i<!-- FIXME //--></sql.mappings>
                <hibernate.dialect>
                    org.hibernate.dialect.Oracle10gDialect
                </hibernate.dialect>
                <jdbc.groupId>oracle</jdbc.groupId>
                <jdbc.artifactId>ojdbc6_g</jdbc.artifactId>
                <jdbc.version>${oracle.version}</jdbc.version>
                <jdbc.driver>
                    oracle.jdbc.driver.OracleDriver
                </jdbc.driver>
                <jdbc.url>
                    jdbc:oracle:thin:@127.0.0.1:1521:${application.id}
                </jdbc.url>
                <jdbc.username>${application.id}</jdbc.username>
                <jdbc.password>${application.id}</jdbc.password>
                <jdbc.exception.sorter>
                    org.jboss.resource.adapter.jdbc.vendor.OracleExceptionSorter
                </jdbc.exception.sorter>
            </properties>
        </profile>
        <profile>
            <id>postgresql</id>
            <activation>
                <activeByDefault>true</activeByDefault>
                <property>
                    <name>jdbc</name>
                    <value>postgresql</value>
                </property>
            </activation>
            <properties>
                <jdbc>postgresql</jdbc>
                <sql.mappings>PostgreSQL</sql.mappings>
                <hibernate.dialect>
                    org.hibernate.dialect.IperSQLDialect
                </hibernate.dialect>
                <jdbc.groupId>postgresql</jdbc.groupId>
                <jdbc.artifactId>postgresql</jdbc.artifactId>
                <jdbc.version>${postgresql.version}</jdbc.version>
                <jdbc.driver>org.postgresql.Driver</jdbc.driver>
                <jdbc.default.url>
                    jdbc:postgresql://${jdbc.host}/${application.id}
                </jdbc.default.url>
            </properties>
        </profile>
        <!-- end jdbc profiles -->

        <profile>
            <id>andromda-generate</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.andromda.maven.plugins</groupId>
                        <artifactId>andromda-maven-plugin</artifactId>
                        <version>${andromda.version}</version>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <configurationUri>${pom.basedir}/mda/src/main/config/andromda.xml</configurationUri>
                                    <lastModifiedCheck>true</lastModifiedCheck>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <!-- andromda dependencies -->
                <dependency>
                    <groupId>org.andromda.profiles.uml2</groupId>
                    <artifactId>andromda-profile</artifactId>
                    <version>${andromda.version}</version>
                    <type>xml.zip</type>
                </dependency>
                <dependency>
                    <groupId>org.andromda.cartridges</groupId>
                    <artifactId>andromda-grails-cartridge</artifactId>
                    <version>${andromda.grails.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>xml-apis</groupId>
                            <artifactId>xml-apis</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
                <dependency>
                    <groupId>org.andromda.cartridges</groupId>
                    <artifactId>andromda-java-cartridge</artifactId>
                    <version>${andromda.version}</version>
                    <exclusions>
                        <exclusion>
                            <groupId>xml-apis</groupId>
                            <artifactId>xml-apis</artifactId>
                        </exclusion>
                    </exclusions>
                </dependency>
            </dependencies>
        </profile>
    </profiles>
</project>
